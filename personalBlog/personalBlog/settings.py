"""
Django settings for personalBlog project.

Generated by 'django-admin startproject' using Django 2.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import json
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# 敏感信息存取或者使用django dotenv管理
with open('env.json') as env:
    ENV = json.load(env)
SECRET_KEY = ENV['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'simpleui',
    'django.contrib.admin',       # 管理员站点， 你很快就会使用它。
    'django.contrib.auth',        # 认证授权系统
    'django.contrib.contenttypes',  # 内容类型框架。
    'django.contrib.sessions',    # 会话框架
    'django.contrib.messages',    # 消息框架
    'django.contrib.staticfiles',  # 管理静态文件的框架。
    # 添加应用
    'blog.apps.BlogConfig',
    'account.apps.AccountConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'personalBlog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.media',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'personalBlog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

### mysql数据库
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'blog',
        'USER': 'root',
        'PASSWORD':'999999',
        'HOST': 'localhost',
        'PORT': 3306,
        'OPTIONS':{'charset': 'utf8mb4'},
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
# STATIC_ROOT = os.path.join(BASE_DIR,'static')
# media_confige
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


SIMPLEUI_HOME_INFO = False #隐藏版本信息
SIMPLEUI_STATIC_OFFLINE = True # simpleui离线使用 
# 加入下面的配置
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')


# 缓存的文档地址
# https://docs.djangoproject.com/zh-hans/2.2/topics/cache/

# python manage.py createcachetable   基于内存的缓存需要建立缓存数据库表


CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'my_cache_table',
    }
}


# qq IMAP/SMTP 配置
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.qq.com' # SMTP服务器,QQ邮箱需要开启SMTP服务。
EMAIL_PORT = 25 # 发送邮件的端口
# 邮箱名
EMAIL_HOST_USER = '758576159@qq.com'
# 邮箱密码，如果是QQ邮箱，填写的不是密码，是授权码
# EMAIL_HOST_PASSWORD = ''
EMAIL_HOST_PASSWORD = ENV['EMAIL_HOST_PASSWORD']
EMAIL_USE_TLS  = True # 是否使用TLS
# 邮件标题前缀
EMAIL_SUBJECT_PREFIX = 'Django-'
# 默认发送人
DEFAULT_FROM_EMAIL = SERVER_EMAIL = EMAIL_HOST_USER

# 管理员邮箱(可多个,获取日志错误)
ADMINS = [('ding', 'mabi290595618@qq.com')]
